// Code generated by mockery v2.51.0. DO NOT EDIT.

package mockery

import (
	mock "github.com/stretchr/testify/mock"
	generator "github.com/walteh/schema2go/pkg/generator"
)

// MockStruct_generator is an autogenerated mock type for the Struct type
type MockStruct_generator struct {
	mock.Mock
}

type MockStruct_generator_Expecter struct {
	mock *mock.Mock
}

func (_m *MockStruct_generator) EXPECT() *MockStruct_generator_Expecter {
	return &MockStruct_generator_Expecter{mock: &_m.Mock}
}

// Description provides a mock function with no fields
func (_m *MockStruct_generator) Description() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Description")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockStruct_generator_Description_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Description'
type MockStruct_generator_Description_Call struct {
	*mock.Call
}

// Description is a helper method to define mock.On call
func (_e *MockStruct_generator_Expecter) Description() *MockStruct_generator_Description_Call {
	return &MockStruct_generator_Description_Call{Call: _e.mock.On("Description")}
}

func (_c *MockStruct_generator_Description_Call) Run(run func()) *MockStruct_generator_Description_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockStruct_generator_Description_Call) Return(_a0 string) *MockStruct_generator_Description_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockStruct_generator_Description_Call) RunAndReturn(run func() string) *MockStruct_generator_Description_Call {
	_c.Call.Return(run)
	return _c
}

// Fields provides a mock function with no fields
func (_m *MockStruct_generator) Fields() []generator.Field {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Fields")
	}

	var r0 []generator.Field
	if rf, ok := ret.Get(0).(func() []generator.Field); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]generator.Field)
		}
	}

	return r0
}

// MockStruct_generator_Fields_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Fields'
type MockStruct_generator_Fields_Call struct {
	*mock.Call
}

// Fields is a helper method to define mock.On call
func (_e *MockStruct_generator_Expecter) Fields() *MockStruct_generator_Fields_Call {
	return &MockStruct_generator_Fields_Call{Call: _e.mock.On("Fields")}
}

func (_c *MockStruct_generator_Fields_Call) Run(run func()) *MockStruct_generator_Fields_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockStruct_generator_Fields_Call) Return(_a0 []generator.Field) *MockStruct_generator_Fields_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockStruct_generator_Fields_Call) RunAndReturn(run func() []generator.Field) *MockStruct_generator_Fields_Call {
	_c.Call.Return(run)
	return _c
}

// HasAllOf provides a mock function with no fields
func (_m *MockStruct_generator) HasAllOf() bool {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for HasAllOf")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MockStruct_generator_HasAllOf_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'HasAllOf'
type MockStruct_generator_HasAllOf_Call struct {
	*mock.Call
}

// HasAllOf is a helper method to define mock.On call
func (_e *MockStruct_generator_Expecter) HasAllOf() *MockStruct_generator_HasAllOf_Call {
	return &MockStruct_generator_HasAllOf_Call{Call: _e.mock.On("HasAllOf")}
}

func (_c *MockStruct_generator_HasAllOf_Call) Run(run func()) *MockStruct_generator_HasAllOf_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockStruct_generator_HasAllOf_Call) Return(_a0 bool) *MockStruct_generator_HasAllOf_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockStruct_generator_HasAllOf_Call) RunAndReturn(run func() bool) *MockStruct_generator_HasAllOf_Call {
	_c.Call.Return(run)
	return _c
}

// HasCustomMarshaling provides a mock function with no fields
func (_m *MockStruct_generator) HasCustomMarshaling() bool {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for HasCustomMarshaling")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MockStruct_generator_HasCustomMarshaling_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'HasCustomMarshaling'
type MockStruct_generator_HasCustomMarshaling_Call struct {
	*mock.Call
}

// HasCustomMarshaling is a helper method to define mock.On call
func (_e *MockStruct_generator_Expecter) HasCustomMarshaling() *MockStruct_generator_HasCustomMarshaling_Call {
	return &MockStruct_generator_HasCustomMarshaling_Call{Call: _e.mock.On("HasCustomMarshaling")}
}

func (_c *MockStruct_generator_HasCustomMarshaling_Call) Run(run func()) *MockStruct_generator_HasCustomMarshaling_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockStruct_generator_HasCustomMarshaling_Call) Return(_a0 bool) *MockStruct_generator_HasCustomMarshaling_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockStruct_generator_HasCustomMarshaling_Call) RunAndReturn(run func() bool) *MockStruct_generator_HasCustomMarshaling_Call {
	_c.Call.Return(run)
	return _c
}

// HasDefaults provides a mock function with no fields
func (_m *MockStruct_generator) HasDefaults() bool {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for HasDefaults")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MockStruct_generator_HasDefaults_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'HasDefaults'
type MockStruct_generator_HasDefaults_Call struct {
	*mock.Call
}

// HasDefaults is a helper method to define mock.On call
func (_e *MockStruct_generator_Expecter) HasDefaults() *MockStruct_generator_HasDefaults_Call {
	return &MockStruct_generator_HasDefaults_Call{Call: _e.mock.On("HasDefaults")}
}

func (_c *MockStruct_generator_HasDefaults_Call) Run(run func()) *MockStruct_generator_HasDefaults_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockStruct_generator_HasDefaults_Call) Return(_a0 bool) *MockStruct_generator_HasDefaults_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockStruct_generator_HasDefaults_Call) RunAndReturn(run func() bool) *MockStruct_generator_HasDefaults_Call {
	_c.Call.Return(run)
	return _c
}

// HasValidation provides a mock function with no fields
func (_m *MockStruct_generator) HasValidation() bool {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for HasValidation")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MockStruct_generator_HasValidation_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'HasValidation'
type MockStruct_generator_HasValidation_Call struct {
	*mock.Call
}

// HasValidation is a helper method to define mock.On call
func (_e *MockStruct_generator_Expecter) HasValidation() *MockStruct_generator_HasValidation_Call {
	return &MockStruct_generator_HasValidation_Call{Call: _e.mock.On("HasValidation")}
}

func (_c *MockStruct_generator_HasValidation_Call) Run(run func()) *MockStruct_generator_HasValidation_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockStruct_generator_HasValidation_Call) Return(_a0 bool) *MockStruct_generator_HasValidation_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockStruct_generator_HasValidation_Call) RunAndReturn(run func() bool) *MockStruct_generator_HasValidation_Call {
	_c.Call.Return(run)
	return _c
}

// Name provides a mock function with no fields
func (_m *MockStruct_generator) Name() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Name")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockStruct_generator_Name_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Name'
type MockStruct_generator_Name_Call struct {
	*mock.Call
}

// Name is a helper method to define mock.On call
func (_e *MockStruct_generator_Expecter) Name() *MockStruct_generator_Name_Call {
	return &MockStruct_generator_Name_Call{Call: _e.mock.On("Name")}
}

func (_c *MockStruct_generator_Name_Call) Run(run func()) *MockStruct_generator_Name_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockStruct_generator_Name_Call) Return(_a0 string) *MockStruct_generator_Name_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockStruct_generator_Name_Call) RunAndReturn(run func() string) *MockStruct_generator_Name_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockStruct_generator creates a new instance of MockStruct_generator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockStruct_generator(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockStruct_generator {
	mock := &MockStruct_generator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
